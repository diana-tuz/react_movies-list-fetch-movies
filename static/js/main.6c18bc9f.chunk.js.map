{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","setTitle","setMovie","loaded","setLoaded","isError","setIsError","onSubmit","event","query","preventDefault","trim","fetch","then","res","json","catch","Response","Error","result","Poster","Title","Plot","imdbID","newMovie","finally","htmlFor","type","id","placeholder","classNames","onChange","e","target","value","disabled","onClick","some","m","App","ReactDOM","render","document","getElementById"],"mappings":"uTAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,6BCFZ,IAAMC,EAA6B,SAAC,GAA2B,IAAzBH,EAAwB,EAAxBA,OAAQI,EAAgB,EAAhBA,UACnD,EAA0BC,mBAAS,IAAnC,mBAAOV,EAAP,KAAcW,EAAd,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOf,EAAP,KAAciB,EAAd,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KA6CA,OACE,qCACE,uBAAMpB,UAAU,aAAaqB,SA7CR,SAACC,GCbrB,IAAkBC,EDcrBD,EAAME,iBACNN,GAAU,ICfWK,EDgBZnB,EAAMqB,OCfVC,MAAM,GAAD,OAHE,2CAGF,cAAiBH,IAC1BI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,wBDYNL,MAAK,SAAAM,GACJ,GAAI,UAAWA,EAAQ,CACrB,IACEC,EACED,EADFC,OAAQC,EACNF,EADME,MAAOC,EACbH,EADaG,KAAMC,EACnBJ,EADmBI,OAGjBC,EAAkB,CACtBlC,MAAO+B,EACP9B,YAAa+B,EACblC,OAAmB,QAAXgC,EAAmBA,EACvB,4DACJ3B,QAAQ,8BAAD,OAAgC8B,GACvC1B,OAAQ0B,GAGVrB,EAASsB,QAETlB,GAAW,MAGdmB,SAAQ,WACPrB,GAAU,OAoBZ,UACE,sBAAKlB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQwC,QAAQ,cAAjC,yBAIA,qBAAKxC,UAAU,UAAf,SACE,uBACE,UAAQ,aACRyC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ3C,UAAW4C,IAAW,QAAS,CAAE,YAAazB,IAC9C0B,SA7BS,SAACC,GACpB/B,EAAS+B,EAAEC,OAAOC,OAClB5B,GAAW,IA4BD4B,MAAO5C,MAIVe,GAEG,mBAAGnB,UAAU,iBAAiB,UAAQ,eAAtC,qDAMN,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRyC,KAAK,SACLQ,UAAW7C,EACXJ,UACE4C,IAAW,kBAAmB,CAAE,aAAc3B,IALlD,4BAYF,qBAAKjB,UAAU,UAAf,SACGD,GAEG,wBACE,UAAQ,YACR0C,KAAK,SACLzC,UAAU,oBACVkD,QA1DQ,WAClBnD,IAAUU,EAAO0C,MAAK,SAAAC,GAAC,OAAIA,EAAEzC,SAAWZ,EAAMY,WAChDE,EAAU,GAAD,mBAAKJ,GAAL,CAAaV,KAGxBgB,EAAS,IACTC,EAAS,OAgDG,qCAaTjB,GAEG,sBAAKC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WErHjBsD,EAAM,WACjB,MAA4BvC,mBAAkB,IAA9C,mBAAOL,EAAP,KAAeI,EAAf,KAEA,OACE,sBAAKb,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAWS,OAAQA,EAAQI,UAAWA,UCZ9CyC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6c18bc9f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[]\n  setMovies: (movies: Movie[]) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [loaded, setLoaded] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handlerFindMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n    setLoaded(true);\n    getMovie(title.trim())\n      .then(result => {\n        if ('Title' in result) {\n          const {\n            Poster, Title, Plot, imdbID,\n          } = result;\n\n          const newMovie: Movie = {\n            title: Title,\n            description: Plot,\n            imgUrl: Poster !== 'N/A' ? Poster\n              : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n            imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n            imdbId: imdbID,\n          };\n\n          setMovie(newMovie);\n        } else {\n          setIsError(true);\n        }\n      })\n      .finally(() => {\n        setLoaded(false);\n      });\n  };\n\n  const handlerInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsError(false);\n  };\n\n  const handlerAddMovie = () => {\n    if (movie && !movies.some(m => m.imdbId === movie.imdbId)) {\n      setMovies([...movies, movie]);\n    }\n\n    setTitle('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handlerFindMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': isError })}\n              onChange={handlerInput}\n              value={title}\n            />\n          </div>\n\n          {isError\n            && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!title}\n              className={\n                classNames('button is-light', { 'is-loading': loaded })\n              }\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie\n              && (\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={handlerAddMovie}\n                >\n                  Add to the list\n                </button>\n              )}\n          </div>\n        </div>\n      </form>\n\n      {movie\n        && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=3ba6af7f';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}